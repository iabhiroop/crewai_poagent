# Supplier Tasks Configuration - Updated for PO Record Tool Integration

process_incoming_orders_task:
  description: >
    Use the Email Monitoring Tool to fetch the last 50 emails and identify purchase 
    order documents from email attachments. Process only emails with attachments, 
    extract PO-related information, and save qualifying orders to the processing queue. 
    Focus on emails containing PO keywords like "Purchase Order", "PO", "Order", 
    "Procurement" in subject or body. Validate sender authenticity and categorize 
    order priority based on content analysis. Prepare email data for document extraction.
  expected_output: >
    A structured JSON report containing processed email data ready for extraction:
    ```json
    {
      "status": "success",
      "processed_emails_count": 15,
      "po_emails_identified": 3,
      "email_processing_timestamp": "2025-05-25T10:30:00",
      "po_attachment_files": [
        {
          "file_path": "/path/to/PO-2025-001.pdf",
          "sender_email": "procurement@company.com",
          "email_subject": "Purchase Order PO-2025-001",
          "received_date": "2025-05-25T10:15:32",
          "priority_level": "high",
          "po_number_hint": "PO-2025-001"
        },
        {
          "file_path": "/path/to/PO-2025-002.pdf", 
          "sender_email": "orders@supplier.com",
          "email_subject": "New Purchase Order",
          "received_date": "2025-05-25T09:30:15",
          "priority_level": "medium",
          "po_number_hint": "extracted_from_attachment"
        }
      ],
      "processing_summary": {
        "total_emails_scanned": 50,
        "attachments_found": 8,
        "po_documents_identified": 3,
        "ready_for_extraction": true
      }
    }
    ```

extract_order_details_task:
  description: >
    Extract detailed information from purchase order documents using OCR and 
    document parsing capabilities from the identified PO attachments. Process 
    PDF files, images, and text documents to extract structured order data. 
    Validate data completeness, perform format standardization, and prepare 
    comprehensive order data for production queue recording. Handle multiple 
    document formats and ensure data accuracy through validation checks. 
    Format the output for seamless handoff to the production queue management agent.
  expected_output: >
    A comprehensive order extraction report formatted json for PO Record Tool processing:
    ```json
    {
      "extraction_status": "success",
      "documents_processed": 3,
      "extraction_timestamp": "2025-05-25T11:00:00",
      "extracted_orders": [
        {
          "order_id": "PO-2025-001",
          "source_file": "/path/to/PO-2025-001.pdf",
          "extraction_confidence": 0.95,
          "customer_details": {
            "company_name": "ABC Manufacturing Ltd",
            "contact_person": "John Smith",
            "email": "sample@gmail.com",
            "phone": "+1-555-0123",
            "billing_address": "123 Business St, City, State 12345",
            "shipping_address": "456 Factory Rd, City, State 12345"
          },
          "order_items": [
            {
              "item_code": "PART-001",
              "description": "Steel Widget Type A",
              "quantity": 500,
              "unit_price": 25.50,
              "total_price": 12750.00,
              "specifications": "Grade A steel, 10cm x 5cm",
              "delivery_date": "2025-06-15"
            }
          ],
          "order_totals": {
            "subtotal": 12750.00,
            "tax_amount": 1275.00,
            "shipping_cost": 200.00,
            "total_amount": 14225.00,
            "currency": "USD"
          },
          "delivery_requirements": {
            "delivery_date": "2025-06-15",
            "shipping_method": "Standard Ground",
            "special_instructions": "Deliver to loading dock"
          },
          "payment_terms": {
            "terms": "Net 30",
            "due_date": "2025-07-15"
          }
        }
      ],
      "validation_summary": {
        "total_orders_extracted": 3,
        "high_confidence_extractions": 2,
        "medium_confidence_extractions": 1,
        "low_confidence_extractions": 0,
        "ready_for_production_queue": true
      }
    }
    ```

record_extracted_orders_task:
  description: >
    Take the extracted PO data from the Order Intelligence Agent and record each order 
    in the production database using the PO Record Tool. Process the extracted_orders 
    array from the extraction output and use the PO Record Tool's record_po action 
    for each order. The tool expects individual order objects in the exact format 
    provided by the extraction task. Store complete order information, customer 
    details, and order items in the production queue system. 
    
    EXPECTED INPUT FORMAT: The extraction output JSON containing "extracted_orders" array
    TOOL USAGE: For each order in extracted_orders, call PO Record Tool with:
    - action="record_po"
    - po_data=individual_order_object
    
    Each order object should contain: order_id, source_file, extraction_confidence,
    customer_details, order_items, order_totals, delivery_requirements, payment_terms.
  expected_output: >
    A production queue recording report confirming database storage:
    ```json
      {
        "recording_status": "",
        "orders_recorded": 0,
        "recording_timestamp": "",
        "email": "",
        "recorded_orders": [
        {
          "po_number": "",
          "response_type": "",
          "Company_email": "",
          "po_data": {
          "customer_details": {
            "company_name": "",
            "contact_person": "",
            "email": "",
            "phone": "",
            "billing_address": "",
            "shipping_address": ""
          },
          "order_items": [
            {
            "item_code": "",
            "description": "",
            "quantity": 0,
            "unit_price": 0.0,
            "total_price": 0.0,
            "specifications": "",
            "delivery_date": ""
            }
          ],
          "order_totals": {
            "subtotal": 0.0,
            "tax_amount": 0.0,
            "shipping_cost": 0.0,
            "total_amount": 0.0,
            "currency": ""
          }
          },
          "action": "",
          "urgent": false
        }
        ],
        "recording_summary": {
        "total_orders_attempted": 0,
        "total_orders_recorded": 0,
        "failed_orders": 0,
        "ready_for_email_confirmation": false
        }
      }
     

send_confirmation_emails_task:
  description: >
    After recording the extracted purchase orders, send two confirmation emails:
    Use the "recorded_orders" array from the input, specifically the "customer_details"->"email" field
    in each order object, to send an acknowledgment email to the customer and another email to the company
    supervisor about the PO. Ensure the emails include relevant order details, sender/recipient information,
    and appropriate status messaging. Log the email delivery status for audit purposes.
  expected_output: >
    A confirmation email delivery report
    